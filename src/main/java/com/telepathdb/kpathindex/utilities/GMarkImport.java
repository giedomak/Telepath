package com.telepathdb.kpathindex.utilities;

import com.telepathdb.datamodels.Node;
import com.telepathdb.datamodels.Path;
import com.telepathdb.kpathindex.KPathIndex;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Utility to import graphs generated by gMark into the kpathindex.
 * gMark: https://github.com/graphMark/gmark
 */
public class GMarkImport {

  private final KPathIndex kPathIndex;

  public GMarkImport(KPathIndex kPathIndex) {
    this.kPathIndex = kPathIndex;
  }

  /**
   * Imports a gMark file
   *
   * Assumes the format of the file resembles: node_id; edge_label; node_id 42 4 6 Meaning the above
   * row indicates a path between nodes 42 and 6, connected by an edge with edgelabel 4.
   */
  public long doImport(String gMarkFile) throws IOException {

    long importedLines = 0;

    try (BufferedReader br = new BufferedReader(new FileReader(gMarkFile))) {
      String line = br.readLine();

      while (line != null) {
        // Split the line on space
        String[] split = line.split(" ");

        // split[0] is the starting node id
        long startNodeID = Long.parseLong(split[0]);
        // split[1] is the edgelabel id
        long edgeLabelID = Long.parseLong(split[1]);
        // split[2] is the end node id
        long endNodeID = Long.parseLong(split[2]);

        // Put them into an array
        List<Node> nodes = new ArrayList<>(2);
        nodes.add(new Node(startNodeID));
        nodes.add(new Node(endNodeID));

        // Insert into the kpathindex
        kPathIndex.insert(new Path(edgeLabelID, nodes));

        importedLines++;
        line = br.readLine();
      }
    }

    return importedLines;
  }
}
